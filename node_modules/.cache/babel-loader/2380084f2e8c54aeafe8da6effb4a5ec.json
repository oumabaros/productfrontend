{"ast":null,"code":"var _jsxFileName = \"D:\\\\resources\\\\tarmac\\\\tovuti\\\\productappfrontend\\\\src\\\\apps\\\\CategoryList.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom';\nimport http from './AppConfig';\nimport url from './AppConfig';\nimport { ProductCategory } from './ProductCategory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class CategoryList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.filterProduct = Id => {\n      //const { products } = this.state;\n      alert(Id);\n      http.get('/products/' + Id).then(result => {\n        this.setState({\n          products: result\n        });\n      });\n    };\n\n    this.state = {\n      error: null,\n      categories: [],\n      products: [],\n      response: {}\n    };\n  }\n\n  componentDidMount() {\n    http.get('/productCategories').then(response => response.data).then(result => {\n      this.setState({\n        categories: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      categories\n    } = this.state;\n    const catUrl = '/products';\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"btn btn-secondary btn-block\",\n              to: url,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), categories && categories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"btn btn-secondary btn-block\",\n                onClick: () => this.filterProduct(cat.Id),\n                to: `${catUrl}/${cat.Id}`,\n                children: cat.CategoryName\n              }, cat.Id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-9\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(Route, {\n              path: `${catUrl}/${cat.Id}`,\n              children: /*#__PURE__*/_jsxDEV(ProductCategory, {\n                prods: this.state.products\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/resources/tarmac/tovuti/productappfrontend/src/apps/CategoryList.js"],"names":["React","Component","Route","Switch","BrowserRouter","Router","Link","http","url","ProductCategory","CategoryList","constructor","props","filterProduct","Id","alert","get","then","result","setState","products","state","error","categories","response","componentDidMount","data","render","catUrl","map","cat","CategoryName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport http from './AppConfig';\r\nimport url from './AppConfig';\r\nimport { ProductCategory } from './ProductCategory';\r\nexport class CategoryList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      categories: [],\r\n      products: [],\r\n      response: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    http\r\n      .get('/productCategories')\r\n      .then((response) => response.data)\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            categories: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        },\r\n      );\r\n  }\r\n  filterProduct = (Id) => {\r\n    //const { products } = this.state;\r\n    alert(Id);\r\n    http.get('/products/' + Id).then((result) => {\r\n      this.setState({\r\n        products: result,\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    const { categories } = this.state;\r\n    const catUrl = '/products';\r\n    return (\r\n      <Router>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-3\">\r\n            <div>\r\n              <Link className=\"btn btn-secondary btn-block\" to={url}>\r\n                All\r\n              </Link>\r\n              {categories &&\r\n                categories.map((cat) => (\r\n                  <div>\r\n                    <br />\r\n                    <Link\r\n                      className=\"btn btn-secondary btn-block\"\r\n                      onClick={() => this.filterProduct(cat.Id)}\r\n                      key={cat.Id}\r\n                      to={`${catUrl}/${cat.Id}`}\r\n                    >\r\n                      {cat.CategoryName}\r\n                    </Link>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-9\">\r\n            <Switch>\r\n              {categories.map((cat) => (\r\n                <Route path={`${catUrl}/${cat.Id}`}>\r\n                  <ProductCategory prods={this.state.products} />\r\n                </Route>\r\n              ))}\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}